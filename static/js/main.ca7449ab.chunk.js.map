{"version":3,"sources":["views/ItemDetails.js","components/TokenAttribute.js","components/Navbar.js","lib/erc20.js","components/ConnectWallet.js","components/Footer.js","components/Item.js","components/ItemList.js","views/Home.js","App.js","reportWebVitals.js","index.js","lib/alchemyClient.js","lib/staking.js","assets/images/loading.gif","lib/erc721.js"],"names":["ItemDetails","accountConnected","id","useParams","useState","showMessage","setShowMessage","headerMessage","setHeaderMessage","showRefreshLink","setShowRefreshLink","metadata","setMetadata","owner","setOwner","owned","setOwned","staked","setStaked","reward","setReward","loaded","setLoaded","inputErrors","setInputErrors","modalActionsDisabled","setModalActionsDisabled","stakeCoinModalVisibility","setStakeCoinModalVisibility","unstakeCoinModalVisibility","setUnstakeCoinModalVisibility","unlockCoinModalVisibility","setUnlockCoinModalVisibility","loadCoinMetadata","getTokenURI","then","data","base64ToString","Buffer","from","substring","toString","meta","JSON","parse","image","replace","process","refreshScreenData","isStaked","st","displayMessage","message","displayMessageRefresh","extractMessage","startIndex","indexOf","userMessage","length","useEffect","getOwnerOf","isOwned","calculateStakeReward","rw","className","variant","show","onClose","dismissible","type","onClick","to","xmlns","width","height","fill","viewBox","d","alchemyClient","nft","getNftMetadata","Math","floor","Date","now","timeLastUpdated","refreshNftMetadata","disabled","fillRule","style","backgroundColor","background_color","placeholderSrc","LoadingImage","src","alt","onError","currentTarget","setTimeout","name","description","slice","toUpperCase","attributes","map","attribute","index","role","onHide","centered","Header","closeButton","Title","Body","Footer","stake","val","withdrawStake","emergencyWithdrawStake","TokenAttribute","trait_type","value","Navbar","connectWallet","polygonProvider","ethers","providers","Web3Provider","window","ethereum","signer","getSigner","contract","Contract","abi","getOwnedEmojis","address","balanceOf","ConnectWallet","onAccountConnect","web3Modal","setWeb3Modal","setAddress","emojis","setEmojis","emojiTokens","setEmojiTokens","setShow","connect","addListeners","provider","getAddress","userAddress","clearCachedProvider","setBalances","round","getOwnedTokens","web3ModalProvider","on","accounts","location","reload","chainId","newWeb3Modal","Web3Modal","cacheProvider","network","cachedProvider","Toast","delay","autohide","showBalances","Item","token","setMetdata","navigate","useNavigate","rawMetadata","tokenId","ItemList","tokens","totalCount","pagedTokens","setPagedTokens","paginationItem","setPaginationItems","fetchPage","e","latestPage","target","innerText","parseInt","updatePagination","pagesCount","ceil","items","number","push","Pagination","active","Home","ownedTokens","setOwnedTokens","setTotalCount","fetchData","pageKey","getNftsForOwner","contractAddresses","r","filtered","ownedNfts","filter","some","item","Alert","App","setAccountConnected","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","settings","apiKey","Network","MATIC_MAINNET","alchemy","Alchemy","waitForTransaction","hash","console","error","tokenURI","ownerOf"],"mappings":"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","file":"static/js/main.ca7449ab.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { isStaked, calculateStakeReward, stake, withdrawStake, emergencyWithdrawStake} from \"../lib/staking\";\nimport { getTokenURI, getOwnerOf } from \"../lib/erc721\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport TokenAttribute from \"../components/TokenAttribute\";\nimport LoadingImage from \"../assets/images/loading.gif\";\nimport alchemyClient from \"../lib/alchemyClient\";\nimport \"../assets/css/ItemDetails.css\";\n\nfunction ItemDetails( { accountConnected } ) {\n  const { id } = useParams();\n  const [ showMessage, setShowMessage ] = useState(false);\n  const [ headerMessage, setHeaderMessage ] = useState(null);  \n  const [ showRefreshLink, setShowRefreshLink ] = useState(true);\n  const [ metadata, setMetadata ] = useState(null);\n  const [ owner, setOwner ] = useState(null);\n  const [ owned, setOwned ] = useState(false);\n  const [ staked, setStaked ] = useState(false);\n  const [ reward, setReward ] = useState(null);\n  const [ loaded, setLoaded ] = useState(false);\n  const [ inputErrors, setInputErrors ] = useState(\"\");\n  const [ modalActionsDisabled, setModalActionsDisabled ] = useState(false);\n  const [ stakeCoinModalVisibility, setStakeCoinModalVisibility] = useState(false);\n  const [ unstakeCoinModalVisibility, setUnstakeCoinModalVisibility] = useState(false);\n  const [ unlockCoinModalVisibility, setUnlockCoinModalVisibility] = useState(false);\n  \n  useEffect(() => {\n    loadCoinMetadata();\n    getOwnerOf(id).then(data => {\n      setOwner(data);\n      let isOwned = data != null && data === accountConnected;\n      setOwned(isOwned);\n      if (isOwned) {\n        isStaked(id).then(st => {\n          setStaked(st);\n          if (st) calculateRewards();\n        });\n      }\n    });\n\n  }, [id, accountConnected]);\n  \n  function loadCoinMetadata() {\n    getTokenURI(id).then(data => {\n      let base64ToString = Buffer.from(data.substring(29), \"base64\").toString();\n      let meta = JSON.parse(base64ToString);\n\n      if (meta?.image){\n        meta.image = meta.image.replace(\"ipfs://\", process.env.REACT_APP_IPFS_GATEWAY);\n      }\n      setMetadata(meta);\n      setLoaded(true);      \n    });\n  }\n\n  function calculateRewards() {\n    calculateStakeReward(id).then(rw => setReward(rw / 1000000000000000000));\n  }\n\n  // stake Modal ----------------------------\n\n  function handleShowStakeItemModalBtn() {\n      setInputErrors(\"\");\n      setStakeCoinModalVisibility(true);\n      setModalActionsDisabled(false);\n  }\n\n  function stakeItem(){\n    setInputErrors(\"\");\n    setModalActionsDisabled(true);\n    stake(id).then(val => {\n      if (val === \"1\"){\n        setStakeCoinModalVisibility(false);\n        displayMessageRefresh(\"The Coin was staked Successfully, it's currently LOCKED and can not be traded. Refresh Metadata on Opensea gallery to see changes on Opensea.\");\n        refreshScreenData();\n      } else {\n        setInputErrors(extractMessage(val?.message));\n        setModalActionsDisabled(false);\n      }\n    });\n  }\n\n  // unstake Modal --------------------------\n\n  function handleShowUnstakeItemModalBtn() {\n    setInputErrors(\"\");\n    setUnstakeCoinModalVisibility(true);\n    setModalActionsDisabled(false);\n  }\n\n  function unstakeItem(){\n    setInputErrors(\"\");\n    setModalActionsDisabled(true);\n    withdrawStake(id).then(val => {\n      if (val === \"1\"){\n        setUnstakeCoinModalVisibility(false);\n        displayMessageRefresh(\"The Coin was unstaked Successfully. Emojis were deposited to your account. Refresh Metadata on Opensea gallery to see changes on Opensea.\");\n        refreshScreenData();\n      } else {\n        setInputErrors(extractMessage(val?.message));\n        setModalActionsDisabled(false);\n      }\n    });\n  }\n\n  // unlock Modal --------------------------\n\n  function handleShowUnlockItemModalBtn() {\n    setInputErrors(\"\");\n    setUnlockCoinModalVisibility(true);\n    setModalActionsDisabled(false);\n  }\n\n  function unlockItem(){\n    setInputErrors(\"\");\n    setModalActionsDisabled(true);\n    emergencyWithdrawStake(id).then(val => {\n      if (val === \"1\"){\n        setUnlockCoinModalVisibility(false);\n        displayMessageRefresh(\"The Coin was unlocked Successfully! Refresh Metadata on Opensea gallery to see changes on Opensea.\");\n        refreshScreenData();\n      } else {\n        setInputErrors(extractMessage(val?.message));\n        setModalActionsDisabled(false);\n      }\n    });\n  }\n\n  function refreshScreenData() {\n    loadCoinMetadata();\n    isStaked(id).then(st => { setStaked(st); });\n    setReward(0);\n  }\n\n  function refreshMetadata() {\n    alchemyClient.nft.getNftMetadata(process.env.REACT_APP_ERC721_TOKEN_ADDRESS, id).then(nft => {\n      if (Math.floor((Date.now() - new Date(nft.timeLastUpdated))/60000) < 15 ) {\n        displayMessage('Metadata can be refreshed every 15 min.')\n      }\n      alchemyClient.nft.refreshNftMetadata(process.env.REACT_APP_ERC721_TOKEN_ADDRESS, id);\n    });\n  }\n\n  function displayMessage(message){\n    setShowRefreshLink(false);\n    setHeaderMessage(message);\n    setShowMessage(true);  \n  }\n  \n  function displayMessageRefresh(message){\n    setShowRefreshLink(true);\n    setHeaderMessage(message);\n    setShowMessage(true);  \n  }  \n\n  function extractMessage(message) {\n    if (message == null) return \"Failed to execute transaction.\";\n\n    let startIndex = message.indexOf('execution reverted:');\n    if (startIndex > 0)\n    {\n      let userMessage = message.substring(startIndex + 20);\n      return userMessage.substring(0, userMessage.indexOf('\"'))\n    }\n\n    if (message.length > 100) return \"Failed to execute transaction.\";\n\n    return message;\n  }\n\n  return (\n    <>\n    { loaded ? (\n      <div className=\"row my-3\">\n        <div className=\"col-md-12\">\n          <div className=\"card py-3  item-details-container\">\n            <div className=\"px-3\">\n                <Alert variant=\"secondary\" show={showMessage} onClose={() => setShowMessage(false)} dismissible>\n                  <p className=\"mb-0\">\n                      {headerMessage}\n                      {\n                        showRefreshLink ?\n                        <><br/>You may need to wait few sec. and click <button type=\"button\" className=\"btn btn-link pt-0 px-0\" onClick={refreshScreenData}>Refresh Screen</button> to see updated data on the screen.</>\n                          : <></>\n                      }                      \n                  </p>\n                </Alert> \n              </div>            \n              <div className=\"px-3\">\n                <Link className=\"btn btn-primary py-1\" to=\"/\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" fill=\"currentColor\" className=\"bi bi-caret-left-fill\" viewBox=\"0 0 18 18\">\n                    <path d=\"m3.86 8.753 5.482 4.796c.646.566 1.658.106 1.658-.753V3.204a1 1 0 0 0-1.659-.753l-5.48 4.796a1 1 0 0 0 0 1.506z\"/>\n                  </svg> \n                  My Gallery\n                </Link>\n                <button type=\"button\" className=\"btn btn-light action-btn py-1 align-right\" onClick={refreshMetadata} disabled={!owned} >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"currentColor\" className=\"bi bi-arrow-clockwise\" viewBox=\"0 0 18 18\">\n                      <path fillRule=\"evenodd\" d=\"M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2v1z\"/>\n                      <path d=\"M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466z\"/>\n                    </svg>                            \n                    Refresh Metadata\n                </button>\n              </div>\n            <div className=\"card-body py-2\">\n              <div className=\"row\">\n                <div className=\"col-md-4\">\n                  <div className=\"mb-3 card item-card\" style={{backgroundColor: \"#\"+metadata?.background_color}}>\n                    <LazyLoadImage placeholderSrc={LoadingImage} src={metadata?.image} className=\"img-fluid\" alt=\"\" \n                      onError={({ currentTarget }) => {\n                        displayMessage(\"It's taking longer to load image from IPFS, please be patient.\");\n                        currentTarget.src=LoadingImage;\n                        setTimeout(function() { currentTarget.src=metadata?.image; }, 500);\n                      }} \n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-8 px-1\">\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <div className=\"row px-2\">\n                        <div className=\"col-md-12\"><h3>{ metadata?.name }</h3></div>\n                      </div>\n                      <div className=\"row px-2\">\n                        <div className=\"col-md-12\"><p>{ metadata?.description}</p></div>\n                      </div>\n                      <div className=\"row px-2\">\n                          <p>  Owned by: <b>{owned ? 'You' : owner?.slice(-6).toUpperCase()}</b> </p>\n                      </div>     \n                      {\n                        reward > 0 ?\n                          (<div className=\"row px-2\">\n                          <p>  Staking Rewards: <b>{reward}</b> </p>\n                          </div> )\n                          : <></>\n                      }\n                      <div className=\"row px-3\">\n                        {metadata?.attributes.map((attribute, index) => (\n                          <div className=\"col-md-4 mb-2 px-1\" key={index}>\n                            <TokenAttribute attribute={attribute} />\n                          </div>\n                        ))}\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <div className=\"btn-group\" role=\"group\">\n                            {\n                            loaded && owned && !staked ? (\n                              <button type=\"button\" className=\"btn btn-secondary action-btn px-4 mx-2\" onClick={handleShowStakeItemModalBtn}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"currentColor\" className=\"bi bi-lock-fill\" viewBox=\"0 0 19 19\">\n                                  <path d=\"M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2z\"/>\n                                </svg>                                                          \n                                Stake\n                              </button>) \n                            : <></>\n                            }\n                            {\n                            loaded && owned && staked ? (\n                              <button type=\"button\" className=\"btn btn-secondary action-btn px-4 mx-2\" onClick={handleShowUnstakeItemModalBtn}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"currentColor\" className=\"bi bi-emoji-smile-fill\" viewBox=\"0 0 19 19\">\n                                  <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zM7 6.5C7 7.328 6.552 8 6 8s-1-.672-1-1.5S5.448 5 6 5s1 .672 1 1.5zM4.285 9.567a.5.5 0 0 1 .683.183A3.498 3.498 0 0 0 8 11.5a3.498 3.498 0 0 0 3.032-1.75.5.5 0 1 1 .866.5A4.498 4.498 0 0 1 8 12.5a4.498 4.498 0 0 1-3.898-2.25.5.5 0 0 1 .183-.683zM10 8c-.552 0-1-.672-1-1.5S9.448 5 10 5s1 .672 1 1.5S10.552 8 10 8z\"/>\n                                </svg>                          \n                                Unstake\n                              </button>) \n                            : <></>\n                            }                                                           \n                            {\n                            loaded && owned && staked ? (\n                              <button type=\"button\" className=\"btn btn-danger action-btn px-4 mx-2\" onClick={handleShowUnlockItemModalBtn}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"currentColor\" className=\"bi bi-unlock-fill\" viewBox=\"0 0 19 19\">\n                                  <path d=\"M11 1a2 2 0 0 0-2 2v4a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h5V3a3 3 0 0 1 6 0v4a.5.5 0 0 1-1 0V3a2 2 0 0 0-2-2z\"/>\n                                </svg>                              \n                                Emergecy Unlock\n                              </button>) \n                            : <></>\n                            } \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <Modal show={stakeCoinModalVisibility} onHide={() => setStakeCoinModalVisibility(false)} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>Stake The Coin</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <span>Staking this coin will put it into locked status. Locked coins can not transfered or interacted with. You can unstake the coin at any time.<br/>\n            Are you sure you want to proceed?\n            </span> \n            <br/>\n            <span className=\"text-danger\">{inputErrors}</span>\n          </Modal.Body>\n          <Modal.Footer className=\"text-center mx-auto input-modal-footer\">\n            <Button variant=\"danger\" onClick={stakeItem} disabled={modalActionsDisabled} >\n              Stake\n            </Button>\n            <Button variant=\"secondary\" onClick={() => setStakeCoinModalVisibility(false)} disabled={modalActionsDisabled} >\n              Cancel\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        <Modal show={unstakeCoinModalVisibility} onHide={() => setUnstakeCoinModalVisibility(false)} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>Unstake The Coin</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <span>Unstaking this coin will reduce the coin's Grade, but will reward you with {reward} Emojis <br/> \n            Are you sure you want to proceed?\n            </span> \n            <br/>\n            <span className=\"text-danger\">{inputErrors}</span>\n          </Modal.Body>\n          <Modal.Footer className=\"text-center mx-auto input-modal-footer\">\n            <Button variant=\"danger\" onClick={unstakeItem} disabled={modalActionsDisabled} >\n              Unstake\n            </Button>\n            <Button variant=\"secondary\" onClick={() => setUnstakeCoinModalVisibility(false)} disabled={modalActionsDisabled} >\n              Cancel\n            </Button>\n          </Modal.Footer>\n        </Modal> \n\n        <Modal show={unlockCoinModalVisibility} onHide={() => setUnlockCoinModalVisibility(false)} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>Unlock The Coin</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <span>Emergency unlock will discard all accumulated stake rewards and will unlock this coin. Coin's grade will NOT be reduced.<br/> \n            Are you sure you want to proceed?\n            </span> \n            <br/>\n            <span className=\"text-danger\">{inputErrors}</span>\n          </Modal.Body>\n          <Modal.Footer className=\"text-center mx-auto input-modal-footer\">\n            <Button variant=\"danger\" onClick={unlockItem} disabled={modalActionsDisabled} >\n              Unlock\n            </Button>\n            <Button variant=\"secondary\" onClick={() => setUnlockCoinModalVisibility(false)} disabled={modalActionsDisabled} >\n              Cancel\n            </Button>\n          </Modal.Footer>\n        </Modal>                 \n        \n      </div>\n    ) : (<></>\n    )}\n      \n    </>\n  );\n}\n\nexport default ItemDetails;","function TokenAttribute( {attribute} ) {\n  return (\n    <>\n    <div className=\"card\">\n        <div className=\"card-body card-body-tight\">\n            <h6 className=\"token-title card-subtitle text-muted text-center\">{ attribute.trait_type ? attribute.trait_type : 'Property' }</h6>\n            <h5 className=\"token-value text-center\">{ attribute.value }</h5>\n        </div>\n    </div>\n    </>\n  );\n}\n\nexport default TokenAttribute;","import { Link } from \"react-router-dom\";\n\nimport \"../assets/css/Home.css\";\n\n\nfunction Navbar( { connectWallet} ) {\n  return (\n    <>\n    <nav className=\"navbar navbar-dark navbar-expand-lg bg-dark\">\n        <div className=\"container\">\n            <Link className=\"navbar-brand\" to=\"/\"><i>EmojiCoins Staking</i></Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">    \n                </ul>\n                <div className=\"d-flex\" role=\"search\">\n                    {connectWallet}\n                </div>\n            </div>\n        </div>\n    </nav>\n    </>\n  );\n}\n\nexport default Navbar;","import { ethers } from \"ethers\";\n\nimport abi from \"../contracts/erc20.json\";\n\nconst polygonProvider = new ethers.providers.Web3Provider(window.ethereum);\nconst signer = polygonProvider.getSigner();\nconst contract = new ethers.Contract(process.env.REACT_APP_ERC20_TOKEN_ADDRESS, abi, signer)\n\nexport async function approve(address, value){\n    try {\n        const data = await contract.approve(address, value)\n        await polygonProvider.waitForTransaction(data.hash)\n        return '1';\n    } catch (error) {\n        console.log(error)\n        return error;\n    }\n}\n\nexport async function getOwnedEmojis(address){\n    const data = await contract.balanceOf(address);\n    return data;\n}","import { useState, useEffect } from 'react';\nimport { providers } from \"ethers\";\nimport Web3Modal from 'web3modal'\nimport { getOwnedEmojis } from \"../lib/erc20\";\nimport { getOwnedTokens } from \"../lib/erc721\";\nimport Toast from 'react-bootstrap/Toast';\n\nfunction ConnectWallet({ onAccountConnect }) {\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const [address, setAddress] = useState(\"\");\n    const [emojis, setEmojis] = useState(0);\n    const [emojiTokens, setEmojiTokens] = useState(null);\n    const [show, setShow] = useState(false);\n\n    useEffect(() => {\n    \n        const newWeb3Modal = new Web3Modal({\n          cacheProvider: true, \n          network: \"mainnet\",\n        });\n    \n        setWeb3Modal(newWeb3Modal)\n    }, [])\n\n    useEffect(() => {\n        if(web3Modal && web3Modal.cachedProvider){\n          connectWallet()\n        }\n    }, [web3Modal])\n\n    async function connectWallet() {\n      const provider = await web3Modal.connect();\n      addListeners(provider);\n      const ethersProvider = new providers.Web3Provider(provider)\n      ethersProvider.getSigner().getAddress().then(userAddress => {\n        setAddress(userAddress)\n        onAccountConnect(userAddress);\n      });\n    }\n\n    async function disconnectWallet(){\n        await web3Modal.clearCachedProvider();\n        setAddress(\"\")\n    }\n\n    async function showBalances(){\n      setBalances(address);\n      setShow(true);\n    }    \n\n    async function setBalances(userAddress){\n      getOwnedEmojis(userAddress).then(data => {\n          //setEmojis(data / 1000000000000000000);\n          setEmojis(Math.round(data / 10000000000000000) / 100);\n      });\n      getOwnedTokens(userAddress).then(data => {\n          setEmojiTokens(data.toString());\n      });\n    }\n\n    async function addListeners(web3ModalProvider) {\n          web3ModalProvider.on(\"accountsChanged\", (accounts) => {\n          window.location.reload()\n        });\n        \n        // Subscribe to chainId change\n        web3ModalProvider.on(\"chainChanged\", (chainId) => {\n          window.location.reload()\n        });\n    }\n\n    return (\n      <>\n        { address ? (\n          <>\n              <Toast onClose={() => setShow(false)} show={show} delay={5000} autohide>\n                <Toast.Body><div><div className=\"mx-4 toast-row\">{emojis} Emojis</div><div className=\"mx-4 toast-row\">{emojiTokens} Emoji Coins</div></div></Toast.Body>\n              </Toast>\n              <button className=\"btn btn-outline-danger mx-2\" type=\"button\" onClick={disconnectWallet}>Disconnect {address.slice(-6).toUpperCase()}</button> \n              <button className=\"btn btn-outline-secondary mx-2\" type=\"button\" onClick={() => showBalances()}>Show Balance</button>\n          </>\n              \n        ): (\n          <button type=\"button\" className=\"btn btn-outline-success\" onClick={connectWallet}>Connect Wallet</button>\n        )}\n      </>\n    );\n}\n\nexport default ConnectWallet;\n","import \"../assets/css/base.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <>\r\n    <div>\r\n      <footer className=\"py-1 bg-dark fixed-bottom footer\">\r\n        <div className=\"container\">\r\n          <p className=\"m-0 text-center text-white\">\r\n            &copy; 2021 - 2022 EmojiCoins\r\n          </p>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Footer;","import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoadingImage from \"../assets/images/loading.gif\";\nimport \"../assets/css/Item.css\";\n\nfunction Item( {token} ) {\n  const [ metadata, setMetdata ] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(()=> {\n    setMetdata(null);\n    if (token?.rawMetadata){\n      let meta = token.rawMetadata;\n      if (meta?.image){\n        meta.image = meta.image.replace(\"ipfs://\", process.env.REACT_APP_IPFS_GATEWAY);\n      }\n      setTimeout(function() { setMetdata(meta) }, 200);\n    }\n  },[token])\n\n  function navigateToItem(){\n    navigate(`/items/${token.tokenId}`);\n  }\n\n  return (\n    <div className=\"card my-3 item-card\" onClick={navigateToItem}>\n    <div className=\"card-header\" style={{backgroundColor: \"#\" + metadata?.background_color}}>\n      <img \n        className=\"card-img-top\" \n        onError={({ currentTarget }) => {\n          currentTarget.src=LoadingImage;\n          setTimeout(function() { currentTarget.src = metadata?.image; }, 200);\n        }}\n        src={metadata != null ? metadata?.image : LoadingImage} \n        alt=\"...\"\n      />\n    </div>\n    <div className=\"card-body\">\n      <h5 className=\"card-title\">{metadata != null ? metadata?.name : \"Loading...\"}</h5>\n    </div>\n  </div>\n  );\n}\n\nexport default Item;\n","import { useEffect, useState } from \"react\";\nimport Pagination from 'react-bootstrap/Pagination';\n\nimport Item from \"./Item\";\n\nfunction ItemList( {tokens, totalCount, accountConnected, loaded} ) {\n  const [ pagedTokens, setPagedTokens] = useState([]);\n  const [ paginationItem, setPaginationItems ] = useState(null);\n\n  useEffect(() => {\n    \n    setPagedTokens(tokens.slice(0, process.env.REACT_APP_PER_PAGE_COUNT));\n    updatePagination(1)\n  }, [tokens])\n\n  function fetchPage(e){\n    const latestPage = e.target.innerText ? parseInt(e.target.innerText): 1;\n    setPagedTokens(tokens.slice((process.env.REACT_APP_PER_PAGE_COUNT*(latestPage-1)),process.env.REACT_APP_PER_PAGE_COUNT*latestPage ))\n\n    updatePagination(latestPage)\n  }\n\n  function updatePagination(latestPage){\n    let pagesCount = Math.ceil(totalCount/ process.env.REACT_APP_PER_PAGE_COUNT)\n    let items = [];\n    for (let number = 1; number <= pagesCount; number++) {\n      items.push(\n        <Pagination.Item key={number} active={number === latestPage} onClick={fetchPage}>\n          {number}\n        </Pagination.Item>,\n      );\n    }\n\n    setPaginationItems(items);\n  }\n\n  return (\n    <>\n      <div className=\"row\">\n        {tokens.length > 0 ? \n          pagedTokens.map((token, index) => (\n            <div className=\"col-md-3\" key={index}>\n                <Item token={token}/>\n            </div>\n          )) : (\n            <></>\n        )}\n        {tokens.length > process.env.REACT_APP_PER_PAGE_COUNT ? (\n          <Pagination className=\"justify-content-center\">{paginationItem}</Pagination>\n          ) : (\n            <></>\n        )}\n        {accountConnected === null ? (\n          <div>Please connect you Metamask wallet.</div>\n          ) : (\n            <></>\n        )}\n        {accountConnected != null && tokens.length === 0 && !loaded? (\n          <div>Loading...</div>\n          ) : (\n            <></>\n        )}\n        {accountConnected != null && tokens.length === 0 && loaded? (\n          <div>You have no items in your gallery.</div>\n          ) : (\n            <></>\n        )} \n            \n      </div>\n    </>\n  );\n}\n\nexport default ItemList;","import { useState, useEffect } from \"react\";\nimport alchemyClient from \"../lib/alchemyClient\";\nimport ItemList from \"../components/ItemList\";\nimport Alert from 'react-bootstrap/Alert'\nimport \"../assets/css/Home.css\";\n\n\nfunction Home( { accountConnected} ) {\n  const [ ownedTokens, setOwnedTokens ] = useState([]);\n  const [ showMessage, setShowMessage ] = useState(true);\n  const [ totalCount, setTotalCount ] = useState(0);\n  const [ loaded, setLoaded ] = useState(false);\n \n  useEffect(() => {\n    if (accountConnected){\n      async function fetchData(){\n        setLoaded(false);\n        let pageKey = \"  \";\n        let tokens = [];\n        let totalCount = 0;\n        while (pageKey){\n          let r = await alchemyClient.nft.getNftsForOwner(accountConnected, {pageKey:pageKey, contractAddresses:[process.env.REACT_APP_ERC721_TOKEN_ADDRESS]});\n          pageKey = r.pageKey;\n          let filtered = r.ownedNfts.filter(function (e) {\n            return e.rawMetadata.attributes.some(item => item.value === 'Stakeable');\n          });\n          tokens.push(...filtered);\n          totalCount += filtered.length;\n          setTotalCount(totalCount);\n          if (tokens.length >= process.env.REACT_APP_GALLERY_MAX_ITEMS_COUNT)\n          break;\n        }\n        setOwnedTokens(tokens);\n        setLoaded(true);\n      }\n      fetchData();\n    }\n    \n  }, [accountConnected])\n\n\n  return (\n    <>\n      <div className=\"row my-3\">\n        <div className=\"col-md-12\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <Alert variant=\"secondary\" show={showMessage} onClose={() => setShowMessage(false)} dismissible>\n                In some extreme cases IPFS may be very slow, it may take time for NFT images to load.\n              </Alert> \n              <ItemList tokens={ownedTokens} totalCount={totalCount} accountConnected={accountConnected} loaded={loaded} />\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </>\n  );\n}\n\nexport default Home;\n","import { useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar\";\nimport ConnectWallet from \"./components/ConnectWallet\";\nimport Footer from \"./components/Footer\";\n\nimport Home from \"./views/Home\";\nimport ItemDetails from \"./views/ItemDetails\";\n\nfunction App() {\n  const [ accountConnected, setAccountConnected] = useState(null);\n\n  function handleOnAccountConnect(val){\n    setAccountConnected(val);\n  }\n\n  return (\n    <>\n      <Navbar connectWallet={<ConnectWallet onAccountConnect={handleOnAccountConnect}/>}/>\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<Home accountConnected={accountConnected}/>} />\n          <Route path=\"items/:id\" element={<ItemDetails accountConnected={accountConnected}/>} />\n        </Routes>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { HashRouter } from \"react-router-dom\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap/dist/js/bootstrap.min.js'\nimport \"./assets/css/base.css\"\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <HashRouter>\n        <App />\n    </HashRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { Network, Alchemy } from \"alchemy-sdk\";\n\nconst settings = {\n    apiKey: process.env.REACT_APP_ALCHEMY_API_KEY,\n    network: Network.MATIC_MAINNET,\n};\n\nconst alchemy = new Alchemy(settings);\n\nexport default alchemy;","import { ethers } from \"ethers\";\nimport abi from \"../contracts/staking.json\";\nimport alchemyClient from \"./alchemyClient\";\n\nconst polygonProvider = new ethers.providers.Web3Provider(window.ethereum);\nconst signer = polygonProvider.getSigner();\nconst contract = new ethers.Contract(process.env.REACT_APP_STAKING_ADDRESS, abi, signer)\n\nexport async function emergencyWithdrawStake(tokenId){\n    try {\n        const data = await contract.emergencyWithdrawStake(tokenId);\n        await polygonProvider.waitForTransaction(data.hash);\n        await alchemyClient.nft.refreshNftMetadata(process.env.REACT_APP_ERC721_TOKEN_ADDRESS, tokenId);\n        return '1';\n    } catch (error) {\n        console.error(error);\n        return error;\n    }\n}\n\nexport async function withdrawStake(tokenId){\n    try {\n        const data = await contract.withdrawStake(tokenId);\n        await polygonProvider.waitForTransaction(data.hash);\n        await alchemyClient.nft.refreshNftMetadata(process.env.REACT_APP_ERC721_TOKEN_ADDRESS, tokenId);\n        return '1';\n    } catch (error) {\n        console.error(error);\n        return error;\n    }\n}\n\nexport async function stake(tokenId){\n    try {\n        const data = await contract.stake(tokenId);\n        await polygonProvider.waitForTransaction(data.hash);\n        await alchemyClient.nft.refreshNftMetadata(process.env.REACT_APP_ERC721_TOKEN_ADDRESS, tokenId);\n        return '1';\n    } catch (error) {\n        console.error(error);\n        return error;\n    }\n}\n\nexport async function calculateStakeReward(id){\n    const data = await contract.calculateStakeReward(id);\n    return data;\n}\n\nexport async function isStaked(id){\n    const data = await contract.isStaked(id);\n    return data;\n}","export default __webpack_public_path__ + \"static/media/loading.429b2865.gif\";","import { ethers } from \"ethers\";\n\nimport abi from \"../contracts/erc721.json\";\n\nconst polygonProvider = new ethers.providers.Web3Provider(window.ethereum);\nconst signer = polygonProvider.getSigner();\nconst contract = new ethers.Contract(process.env.REACT_APP_ERC721_TOKEN_ADDRESS, abi, signer)\n\nexport async function getOwnedTokens(address){\n    const data = await contract.balanceOf(address);\n    return data;\n}\n\nexport async function getTokenURI(id){\n    const data = await contract.tokenURI(id);\n    return data;\n}\n\nexport async function getOwnerOf(id){\n    const data = await contract.ownerOf(id);\n    return data;\n}\n\nexport async function approvenft(address, value){\n    try {\n        const data = await contract.approve(address, value)\n        await polygonProvider.waitForTransaction(data.hash)\n        return '1';\n    } catch (error) {\n        console.log(error)\n        return error;\n    }\n}"],"sourceRoot":""}